#test
stages:
  - build
  - test
  - release
  - deploy
  - notify
include:
  - template: Security/SAST.gitlab-ci.yml 
variables:
    VERSION: 1.0.${CI_PIPELINE_ID}
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

build-frontend-code-job:
  stage: build  
  only:
    changes:
    - frontend/**/*
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
    
sonarqube-frontend-sast:
  stage: test
  only:
    changes:
    - frontend/**/*
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  script:
    - cd frontend
    - sonar-scanner -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT} -Dsonar.qualitygate.wait=true -Dsonar.sources=. -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.login=${SONAR_LOGIN_FRONT} -Dsonar.projectName='09_ANDREYVOROBYEV_FRONTEND'
  needs:
    - job: build-frontend-code-job



upload-frontend-release:
  stage: release
  only:
    changes:
    - frontend/**/*
  needs:
    - sonarqube-frontend-sast
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-vorobyev-andrey-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz 
    
deploy-frontend:
  stage: deploy
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./frontend/sausage-store.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-frontend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./frontend/deploy.sh 
  environment:
    name: production
  when: manual
  needs:
    - job: upload-frontend-release

slack-notification-frontend:
  stage: notify
  variables: 
    DEPLOY_CURL_COMMAND_BODY: '{\"text\":\"Вышла новая версия frontend сосисочной — ${VERSION}. Скачать frontend можно по ссылке — https://nexus.praktikum-services.ru/repository/sausage-store-vorobyev-andrey-frontend/sausage-store/$VERSION/sausage-store-$VERSION.tar.gz .\"}'
    DEPLOY_CURL_COMMAND: 'curl -X POST -H "Content-type: application/json" --data "$DEPLOY_CURL_COMMAND_BODY"  https://hooks.slack.com/services/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'
  only:
    changes:
    - frontend/**/*
  script:
    - echo $DEPLOY_CURL_COMMAND
    - 'eval "$DEPLOY_CURL_COMMAND"'
  needs:
    - job: deploy-frontend

cache:
  key: frontend
  paths:
    - frontend/dist/frontend # для хранения фронта 
