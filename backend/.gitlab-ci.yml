stages:
  - build
  - test
  - release
  - deploy
  - notify
include:
  - template: Security/SAST.gitlab-ci.yml 
variables:
    VERSION: 1.0.${CI_PIPELINE_ID}
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
    JAVA_OPTS: -XX:MaxRAMPercentage=90 # для того, чтобы Maven не съел всю свободную оперативку

build-backend-code-job:
  stage: build  
  only:
    changes:
    - backend/*
  script:
    - cd backend
    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dversion.application=${VERSION}
  artifacts:
    paths:
      - backend/target/sausage-store-${VERSION}.jar
      - ${CI_PROJECT_DIR}/.m2/

sonarqube-backend-sast:
  stage: test
  only:
    changes:
    - backend/*
  image: maven:3.8-openjdk-16 # тот самый docker-образ, о котором мы все узнаем в будущем
  script:
    - cd backend
    - >
      mvn verify sonar:sonar -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACK}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FRONT}
      -Dsonar.projectName='09_ANDREYVOROBYEV_BACKEND'
  needs:
    - job: build-backend-code-job

slack-notification-backend:
  stage: notify
  variables:
    DEPLOY_CURL_COMMAND_BODY: '{\"text\":\"Вышла новая версия backend сосисочной — ${VERSION}. Скачать backend можно по ссылке — https://nexus.praktikum-services.ru/repository/sausage-store-vorobyev-andrey-backend/com/yandex/practicum/devops/sausage-store/$VERSION/sausage-store-$VERSION.jar .\"}'
    DEPLOY_CURL_COMMAND: 'curl -X POST -H "Content-type: application/json" --data "$DEPLOY_CURL_COMMAND_BODY" https://hooks.slack.com/services/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'
  only:
    changes:
    - backend/*
  script:
    - echo $DEPLOY_CURL_COMMAND
    - 'eval "$DEPLOY_CURL_COMMAND"'
  needs:
    - job: deploy

upload-backend-release:
  stage: release
  only:
    changes:
      - backend/*
  needs:
    - sonarqube-backend-sast
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy 

before_script:
  #устанавливаем ssh-agent для удобства аутентификации по ssh
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  #сохраняем сгенеренный ранее приватный ключ для раннера
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 600 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

deploy:
  stage: deploy
  script:
- scp ./backend/sausage-store.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./backend/deploy.sh 

  needs:
    - job: upload-backend-release
     
cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository # для хранения зависимостей бэкенда